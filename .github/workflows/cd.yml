name: CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  attach_binaries:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            suffix: linux-x64
            ext: ""
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            suffix: win-x64
            ext: .exe
          - target: x86_64-apple-darwin
            os: macos-latest
            suffix: macos-x64
            ext: ""
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-latest
            suffix: linux-arm
            ext: ""
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            suffix: linux-arm64
            ext: ""
    needs: [build]
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --locked --target=${{ matrix.target }}
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/webptz${{ matrix.ext }}
